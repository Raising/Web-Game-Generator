module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 15);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = require("path");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _require = __webpack_require__(19),
    createHash = _require.createHash;

function hash(content) {
  return createHash('sha1').update(content).digest().hexSlice();
}

module.exports = hash;

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = require("webpack-sources/lib/RawSource");

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = require("fs");

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = require("pify");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModuleDependency = __webpack_require__(9);

var EntryReferenceTransformDependency = function (_ModuleDependency) {
  _inherits(EntryReferenceTransformDependency, _ModuleDependency);

  function EntryReferenceTransformDependency(request) {
    _classCallCheck(this, EntryReferenceTransformDependency);

    return _possibleConstructorReturn(this, (EntryReferenceTransformDependency.__proto__ || Object.getPrototypeOf(EntryReferenceTransformDependency)).call(this, request));
  }

  return EntryReferenceTransformDependency;
}(ModuleDependency);

module.exports = EntryReferenceTransformDependency;

/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = require("webpack/lib/node/NodeTargetPlugin");

/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = require("webpack/lib/node/NodeTemplatePlugin");

/***/ }),
/* 8 */
/***/ (function(module, exports) {

module.exports = require("webpack/lib/dependencies/SingleEntryDependency");

/***/ }),
/* 9 */
/***/ (function(module, exports) {

module.exports = require("webpack/lib/dependencies/ModuleDependency");

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _require = __webpack_require__(0),
    dirname = _require.dirname;

var RawSource = __webpack_require__(2);
var Module = __webpack_require__(11);

var EntryReferenceTransformDependency = __webpack_require__(5);

var hash = __webpack_require__(1);

var EntryReferenceModule = function (_Module) {
  _inherits(EntryReferenceModule, _Module);

  function EntryReferenceModule(resource) {
    _classCallCheck(this, EntryReferenceModule);

    var _this = _possibleConstructorReturn(this, (EntryReferenceModule.__proto__ || Object.getPrototypeOf(EntryReferenceModule)).call(this));

    _this.context = dirname(resource);
    _this.resource = resource;
    _this.isEntry = false;
    _this.entryRequest = null;
    _this.dependencies = [];
    _this.built = false;
    _this.cacheable = false;
    return _this;
  }

  _createClass(EntryReferenceModule, [{
    key: 'identifier',
    value: function identifier() {
      return 'entry reference ' + this.resource.split('?')[0];
    }
  }, {
    key: 'readableIdentifier',
    value: function readableIdentifier(requestShortener) {
      return 'entry reference ' + requestShortener.shorten(this.resource.split('?')[0]);
    }
  }, {
    key: 'build',
    value: function build(options, compilation, resolver, fs, callback) {
      this.built = true;
      callback();
    }
  }, {
    key: 'source',
    value: function source() {
      if (this._source) {
        return this._source;
      }

      var references = [];
      var refKeys = {};
      this.dependencies.forEach(function (dep) {
        if (!dep.module) {
          return;
        }
        if (dep.request.indexOf('!') === -1 && dep.request.indexOf('?') === -1) {
          if (refKeys.default) {
            return;
          }
          refKeys.default = true;
          references.push('  default: function() {return __webpack_require__(' + dep.module.id + ');}');
        } else {
          if (refKeys[hash(dep.request)]) {
            return;
          }
          refKeys[hash(dep.request)] = true;
          references.push('  ' + JSON.stringify(hash(dep.request)) + ': function() {return __webpack_require__(' + dep.module.id + ');}');
        }
      });
      var rawSource = 'module.exports = {\n' + references.join(',\n') + '\n};\n';
      if (this.isEntry) {
        var requestHash = this.entryRequest.indexOf('!') === -1 && this.entryRequest.indexOf('?') === -1 ? 'default' : hash(this.entryRequest);
        rawSource += 'module.exports[' + JSON.stringify(requestHash) + ']();\n';
      }
      this._source = new RawSource(rawSource);
      return this._source;
    }
  }, {
    key: 'size',
    value: function size() {
      return this.source().size();
    }
  }, {
    key: 'addData',
    value: function addData(dep) {
      var index = this.dependencies.findIndex(function (_dep) {
        return _dep.request === dep.request;
      });
      if (index !== -1) {
        this.dependencies.splice(index, 1);
      }
      this.dependencies.push(dep);
    }
  }]);

  return EntryReferenceModule;
}(Module);

module.exports = EntryReferenceModule;

/***/ }),
/* 11 */
/***/ (function(module, exports) {

module.exports = require("webpack/lib/Module");

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _require = __webpack_require__(0),
    dirname = _require.dirname,
    relative = _require.relative;

var Module = __webpack_require__(11);
var NullDependency = __webpack_require__(22);
var RawSource = __webpack_require__(2);

var hash = __webpack_require__(1);

var ReferenceEntryModule = function (_Module) {
  _inherits(ReferenceEntryModule, _Module);

  function ReferenceEntryModule(data, dep) {
    _classCallCheck(this, ReferenceEntryModule);

    var _this = _possibleConstructorReturn(this, (ReferenceEntryModule.__proto__ || Object.getPrototypeOf(ReferenceEntryModule)).call(this));

    _this.data = data;
    _this.dep = dep;
    _this.context = data.context;
    _this.resource = data.resource;
    _this.dependencies = [];
    _this.built = false;
    _this.cacheable = false;
    _this.isSelfReference = false;
    _this.selfModule = null;
    return _this;
  }

  _createClass(ReferenceEntryModule, [{
    key: 'identifier',
    value: function identifier() {
      return 'reference ' + this.resource.split('?')[0] + '.' + this.requestHash;
    }
  }, {
    key: 'readableIdentifier',
    value: function readableIdentifier(requestShortener) {
      return 'reference ' + requestShortener.shorten(this.resource.split('?')[0]) + '.' + this.requestHash;
    }
  }, {
    key: 'build',
    value: function build(options, compilation, resolver, fs, callback) {
      this.built = true;
      callback();
    }
  }, {
    key: 'source',
    value: function source() {
      if (!this._source) {
        var moduleRequire = 'require(' + JSON.stringify('./' + relative(this.context, this.resource.split('?')[0])) + ')';
        if (this.isSelfReference) {
          moduleRequire = '__webpack_require__(' + this.selfModule.id + ')';
          this.dependencies.push(new NullDependency());
        }
        var moduleIdHash = JSON.stringify(this.requestHash);
        this._source = new RawSource('module.exports = ' + moduleRequire + '[' + moduleIdHash + ']();');
      }
      return this._source;
    }
  }, {
    key: 'size',
    value: function size() {
      return this.source().size();
    }
  }, {
    key: 'requestHash',
    get: function get() {
      return this.data.loaders.length || this.data.resource.indexOf('?') !== -1 ? hash(this.dep.request) : 'default';
    }
  }]);

  return ReferenceEntryModule;
}(Module);

module.exports = ReferenceEntryModule;

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModuleDependency = __webpack_require__(9);

var EntryReferenceDependency = function (_ModuleDependency) {
  _inherits(EntryReferenceDependency, _ModuleDependency);

  function EntryReferenceDependency(resource) {
    _classCallCheck(this, EntryReferenceDependency);

    return _possibleConstructorReturn(this, (EntryReferenceDependency.__proto__ || Object.getPrototypeOf(EntryReferenceDependency)).call(this, resource));
  }

  return EntryReferenceDependency;
}(ModuleDependency);

module.exports = EntryReferenceDependency;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function () {
  for (var _len = arguments.length, attempts = Array(_len), _key = 0; _key < _len; _key++) {
    attempts[_key] = arguments[_key];
  }

  var err = void 0;
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = attempts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var fn = _step.value;

      try {
        var exports = fn();
        return exports.default || exports;
      } catch (_) {
        err = _;
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  throw err;
};

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var fs = __webpack_require__(3);

var _require = __webpack_require__(0),
    join = _require.join;

var webpack = __webpack_require__(16);

var JestWebpackPlugin = __webpack_require__(17);

// Try to require jest's specific dependencies to mirror its argv and config
// behaviour to try and match how it determines things like test files to
// execute.
var tryRequire = __webpack_require__(14);

var _tryRequire = tryRequire(function () {
  return __webpack_require__(46);
}, function () {
  return __webpack_require__(47);
}, function () {
  return __webpack_require__(48);
}),
    readConfig = _tryRequire.readConfig;

var yargs = tryRequire(function () {
  return __webpack_require__(49);
}, function () {
  return __webpack_require__(50);
}, function () {
  return __webpack_require__(51);
});
var jestArgs = tryRequire(function () {
  return __webpack_require__(52);
}, function () {
  return __webpack_require__(53);
});

function main(argv, config) {
  // Ensure JestWebpackPlugin is active

  // Echo jest's argv and jest config behaviour
  var jestArgv = yargs([]).options(jestArgs.options).check(jestArgs.check).parse(argv);
  var jestConfig = readConfig(jestArgv, config.context);

  // var coverageMode = process.argv
  // .reduce(function(carry, opt) {return carry || /^--coverage$/.test(opt);}, false);

  // if (coverageMode) {
  //   config.babel.plugins = (config.babel.plugins || []).concat('istanbul');
  // }

  config.plugins = config.plugins || [];
  config.plugins.push(new JestWebpackPlugin({ argv: argv, jestArgv: jestArgv, jestConfig: jestConfig }));

  var compiler = webpack(config);

  // var watchMode = process.argv
  // .reduce(function(carry, opt) {return carry || /^--watch/.test(opt);}, false);

  var watchMode = false;

  if (watchMode) {
    compiler.watch({}, function () {});
  } else {
    compiler.run(function () {});
  }
}

// let once = true;
if (process.argv[1] === __filename) {
  main(process.argv.slice(2), eval('require')(join(process.cwd(), 'webpack.config.js')));
}

module.exports = main;

/***/ }),
/* 16 */
/***/ (function(module, exports) {

module.exports = require("webpack");

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _require = __webpack_require__(0),
    join = _require.join;

// const EmitChangedAssetsPlugin = require('./emit-changed-assets-plugin');


var EmitPackagePlugin = __webpack_require__(18);
// const EntryPerModulePlugin = require('./entry-per-module-plugin');
var EntryReferencePlugin = __webpack_require__(20);
var ManifestPlugin = __webpack_require__(23);
var RunJestWhenDonePlugin = __webpack_require__(26);
var SharedData = __webpack_require__(28);
var TestEntriesPlugin = __webpack_require__(30);

var hash = __webpack_require__(1);

var JestWebpackPlugin = function () {
  function JestWebpackPlugin() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, JestWebpackPlugin);

    this.options = options;
  }

  // externals: Treat dependencies that match any test in this option as
  // external to the chunk being built. Being external they need to be a script
  // as their own chunk or not need webpack to handle them.


  _createClass(JestWebpackPlugin, [{
    key: 'externals',
    value: function externals(context, depRequest, cb) {
      var request = typeof depRequest === 'string' ? depRequest : depRequest.rawRequest;
      var requestParts = request.split('!');
      var resource = requestParts[requestParts.length - 1];

      if (/^\w/.test(resource)) {
        // All other modules are expected to not need webpack work and come from
        // node_modules (e.g. react).
        cb(null, request, 'commonjs2');
      } else {
        cb(null);
      }
    }
  }, {
    key: 'apply',
    value: function apply(compiler) {
      var _options = this.options,
          argv = _options.argv,
          jestArgv = _options.jestArgv,
          jestConfig = _options.jestConfig;


      compiler.options.entry = {};
      compiler.options.output.path = this.options.path || join(compiler.options.context, '.cache/jest-webpack');
      compiler.options.output.filename = '[name]';
      compiler.options.output.chunkFilename = '[hash].[id].js';
      // Need an appropriate libraryTarget to get the output from a built module.
      compiler.options.output.libraryTarget = 'commonjs2';
      // Jest is going to require files like in node. The output chunks need to
      // module.exports their entry module.
      compiler.options.target = 'node';
      // compiler.options.externals = this.externals.bind(this);

      var shared = new SharedData();

      new EmitPackagePlugin().apply(compiler);
      // new EmitChangedAssetsPlugin().apply(compiler);
      new ManifestPlugin({ data: shared }).apply(compiler);
      new EntryReferencePlugin({ data: shared }).apply(compiler);
      // this.entryPerModule = new EntryPerModulePlugin();
      // this.entryPerModule.apply(compiler);
      new RunJestWhenDonePlugin({ argv: argv, jestArgv: jestArgv }).apply(compiler);
      new TestEntriesPlugin({ data: shared, jestArgv: jestArgv, jestConfig: jestConfig }).apply(compiler);
    }
  }]);

  return JestWebpackPlugin;
}();

module.exports = JestWebpackPlugin;

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _require = __webpack_require__(0),
    join = _require.join,
    relative = _require.relative,
    resolve = _require.resolve;

var pify = __webpack_require__(4);
var RawSource = __webpack_require__(2);

var hash = __webpack_require__(1);

var EmitPackagePlugin = function () {
  function EmitPackagePlugin() {
    _classCallCheck(this, EmitPackagePlugin);
  }

  _createClass(EmitPackagePlugin, [{
    key: 'apply',
    value: function apply(compiler) {
      var config = compiler.options;

      compiler.plugin('make', function (compilation, cb) {
        var inputFileSystem = compilation.inputFileSystem;
        var readFile = inputFileSystem.readFile.bind(inputFileSystem);
        pify(readFile)(join(config.context, 'package.json')).then(function (src) {
          compilation.assets['package.json'] = new RawSource(src);
          cb();
        }).catch(cb);
      });
    }
  }]);

  return EmitPackagePlugin;
}();

module.exports = EmitPackagePlugin;

/***/ }),
/* 19 */
/***/ (function(module, exports) {

module.exports = require("crypto");

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _require = __webpack_require__(0),
    dirname = _require.dirname,
    join = _require.join,
    relative = _require.relative;

var SingleEntryDependency = __webpack_require__(8);
var ExternalModule = __webpack_require__(21);

var EntryReferenceTransformDependency = __webpack_require__(5);
var EntryReferenceModule = __webpack_require__(10);
var ReferenceEntryModule = __webpack_require__(12);
var EntryReferenceDependency = __webpack_require__(13);

var NodeTargetPlugin = __webpack_require__(6);
var NodeTemplatePlugin = __webpack_require__(7);

var EntryReferencePlugin = function () {
  function EntryReferencePlugin(options) {
    _classCallCheck(this, EntryReferencePlugin);

    this.options = options;
  }

  _createClass(EntryReferencePlugin, [{
    key: 'apply',
    value: function apply(compiler) {
      var options = this.options || {};
      var exclude = options.exclude || function (path) {
        return (/node_modules/.test(path)
        );
      };

      var topCompilation = void 0;

      compiler.plugin('this-compilation', function (compilation) {
        topCompilation = compilation;
      });

      compiler.plugin('compilation', function (compilation, _ref) {
        var normalModuleFactory = _ref.normalModuleFactory;

        compilation.dependencyFactories.set(EntryReferenceDependency, normalModuleFactory);
        compilation.dependencyFactories.set(EntryReferenceTransformDependency, normalModuleFactory);

        normalModuleFactory.plugin('before-resolve', function (data, callback) {
          if (_typeof(data.request) === 'object') {
            data.request = data.rawRequest;
          }
          callback(null, data);
        });

        normalModuleFactory.plugin('resolver', function (resolver) {
          return function (result, callback) {
            var dependency = result.dependency || result.dependencies[0];

            if (dependency instanceof EntryReferenceDependency) {
              return callback(null, options.data.entries[dependency.request]);
            }

            resolver(result, function (err, data) {
              if (err) {
                return callback(err);
              }
              if (typeof data.source === 'function') {
                return options.data.compileFile(data.resource.split('?')[0], function () {
                  var dep = new EntryReferenceTransformDependency('!!' + data.request);
                  // dep.userRequest = data.userRequest;
                  dep.module = data;
                  options.data.entries[data.resource.split('?')[0]].addData(dep);
                  callback(err, data);
                });
              }

              if (dependency instanceof EntryReferenceTransformDependency) {
                return callback(null, data);
              }

              if (data.loaders.length === 0 && exclude(data.resource)) {
                var compilationDir = dirname(compilation.compiler.name);
                var compilerOutput = compiler.options.output.path;
                var compilationOutput = join(compilerOutput, compilationDir);
                var relativeResource = relative(compilationOutput, data.resource);
                return callback(err, new ExternalModule(relativeResource, 'commonjs2'));
              }

              options.data.compileModule(data.request, data.resource.split('?')[0], function (err, dep) {
                if (err) {
                  return callback(err);
                }

                var shortResource = relative(compilation.compiler.options.context, data.resource.split('?')[0]);
                if (compilation.compiler.name === shortResource) {
                  callback(null, data);
                } else {
                  callback(null, new ReferenceEntryModule(data, dep));
                }
              }, data.resource.split('?')[1] === '__jest_webpack_isEntry');
            });
          };
        });

        compilation.plugin('seal', function () {
          var entries = {};
          var refs = {};
          compilation.modules.forEach(function (module) {
            if (module instanceof EntryReferenceModule) {
              entries[module.resource] = module;
              if (refs[module.resource]) {
                var entryModule = module;
                refs[module.resource].map(function (refModule) {
                  refModule.isSelfReference = true;
                  refModule.selfModule = entryModule;
                });
              }

              // Ensure modules are in the compilation modules list.
              module.dependencies.forEach(function (dep) {
                if (compilation.modules.indexOf(dep.module) === -1) {
                  dep.module = compilation.modules.find(function (module) {
                    return module.identifier() === dep.module.identifier();
                  });
                }
              });
            } else if (module instanceof ReferenceEntryModule) {
              refs[module.resource] = (refs[module.resource] || []).concat(module);
              if (entries[module.resource]) {
                var _entryModule = entries[module.resource];
                var refModule = module;
                refModule.isSelfReference = true;
                refModule.selfModule = _entryModule;
              }
            }
          });
        });
      });
    }
  }]);

  return EntryReferencePlugin;
}();

module.exports = EntryReferencePlugin;

/***/ }),
/* 21 */
/***/ (function(module, exports) {

module.exports = require("webpack/lib/ExternalModule");

/***/ }),
/* 22 */
/***/ (function(module, exports) {

module.exports = require("webpack/lib/dependencies/NullDependency");

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _require = __webpack_require__(0),
    join = _require.join;

var pify = __webpack_require__(4);
var RawSource = __webpack_require__(2);

var hash = __webpack_require__(1);
var ReferenceEntryModule = __webpack_require__(12);

var _require2 = __webpack_require__(24),
    configHash = _require2.configHash,
    contextHash = _require2.contextHash,
    depsContextHash = _require2.depsContextHash,
    fileHash = _require2.fileHash;

var hashMembers = function hashMembers(members, memberHash) {
  return Promise.all(members.map(memberHash)).then(function (hashes) {
    return hashes.reduce(function (carry, value) {
      return hash(carry + value);
    }, '');
  });
};

var ManifestPlugin = function () {
  function ManifestPlugin() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, ManifestPlugin);

    this.options = options;
  }

  _createClass(ManifestPlugin, [{
    key: 'apply',
    value: function apply(compiler) {
      var options = this.options;
      var _configHash = configHash(compiler.options);

      var manifestPath = join(compiler.options.context, '.cache/jest-webpack/manifest.json');
      var depsDirs = [join(compiler.options.context, 'node_modules')];
      var depsHash = Promise.all(depsDirs.map(depsContextHash)).catch(function () {
        return [''];
      }).then(function (hashes) {
        return hashes.reduce(function (carry, value) {
          return hash(carry + value);
        });
      });

      compiler.plugin(['watch-run', 'run'], function (compiler, cb) {
        var inputFileSystem = compiler.inputFileSystem;
        var readFile = inputFileSystem.readFile.bind(inputFileSystem);
        var manifest = pify(readFile)(manifestPath).then(function (file) {
          return file.toString();
        }).catch(function () {
          return '{}';
        }).then(JSON.parse);
        Promise.all([manifest, depsHash]).then(function (_ref) {
          var _ref2 = _slicedToArray(_ref, 2),
              manifest = _ref2[0],
              depsHash = _ref2[1];

          return Promise.all(Object.keys(manifest).filter(function (resource) {
            return !resource.startsWith('__');
          }).map(function (resource) {
            return Promise.all([pify(readFile)(join(compiler.options.context, '.cache/jest-webpack', resource)).then(hash).catch(function () {
              return '';
            }), hashMembers(manifest[resource].fileDependencies, fileHash), hashMembers(manifest[resource].contextDependencies, contextHash)]).then(function (_ref3) {
              var _ref4 = _slicedToArray(_ref3, 3),
                  hash = _ref4[0],
                  fileHash = _ref4[1],
                  contextHash = _ref4[2];

              if (manifest[resource].hash === hash && manifest[resource].fileHash === fileHash && manifest[resource].contextHash === contextHash) {
                return {
                  resource: join(compiler.options.context, resource),
                  transforms: manifest[resource].transforms
                };
              }
            });
          })).then(function (entries) {
            return entries.filter(Boolean);
          }).then(function (entries) {
            var _manifest = {
              __depsHash: manifest.__depsHash,
              __configHash: manifest.__configHash
            };
            entries.forEach(function (entry) {
              _manifest[entry.resource] = entry;
            });
            return [_manifest, depsHash];
          });
        }).then(function (_ref5) {
          var _ref6 = _slicedToArray(_ref5, 2),
              manifest = _ref6[0],
              depsHash = _ref6[1];

          if (manifest.__depsHash !== depsHash || manifest.__configHash !== _configHash) {
            options.data.setManifest(null);
            return cb();
          }

          // console.log(manifest);
          // process.exit();
          options.data.setManifest(manifest);
          cb();
        }).catch(function (err) {
          console.error(err);throw err;
        }).catch(cb);
      });

      compiler.plugin('emit', function (compilation, cb) {
        var inputFileSystem = compilation.inputFileSystem;
        var readFile = inputFileSystem.readFile.bind(inputFileSystem);
        pify(readFile)(manifestPath).then(function (file) {
          return file.toString();
        }).catch(function () {
          return '{}';
        }).then(JSON.parse).then(function (manifest) {
          return Promise.all(compilation.children.map(function (fileCompilation) {
            var source = fileCompilation.assets[fileCompilation.compiler.name].source();
            return Promise.all([Promise.resolve(source).then(hash).catch(function () {
              return '';
            }), hashMembers(fileCompilation.fileDependencies, fileHash), hashMembers(fileCompilation.contextDependencies, contextHash)]).then(function (_ref7) {
              var _ref8 = _slicedToArray(_ref7, 3),
                  hash = _ref8[0],
                  fileHash = _ref8[1],
                  contextHash = _ref8[2];

              // console.log('new version', fileCompilation.compiler.name, hash);
              var listDepRequests = function listDepRequests(block) {
                return block.dependencies.map(function (dep) {
                  return dep.module instanceof ReferenceEntryModule ? dep.module.dep.request : null;
                }).filter(Boolean);
              };
              var listVarRequests = function listVarRequests(block) {
                return block.variables.map(listDepRequests);
              };
              var listBlkRequests = function listBlkRequests(block) {
                var _listDepRequests$conc, _listDepRequests;

                return (_listDepRequests$conc = (_listDepRequests = listDepRequests(block)).concat.apply(_listDepRequests, _toConsumableArray(listVarRequests(block)))).concat.apply(_listDepRequests$conc, _toConsumableArray(block.blocks.map(listBlkRequests)));
              };
              manifest[fileCompilation.compiler.name] = {
                fileDependencies: fileCompilation.fileDependencies,
                contextDependencies: fileCompilation.contextDependencies,
                hash: hash,
                fileHash: fileHash,
                contextHash: contextHash,
                transforms: fileCompilation.modules.find(function (module) {
                  return module.identifier().startsWith("entry reference");
                }).dependencies.reduce(function (carry, dep) {
                  if (!carry.find(function (_dep) {
                    return _dep.module.request === dep.module.request;
                  })) {
                    carry.push(dep);
                  }
                  return carry;
                }, []).map(function (dep) {
                  return {
                    isEntry: !dep.module.rawRequest.startsWith('!!'),
                    request: dep.module.request,
                    rawRequest: dep.module.rawRequest,
                    dependencies: listBlkRequests(dep.module).reduce(function (carry, dep) {
                      if (carry.indexOf(dep) === -1) {
                        carry.push(dep);
                      }
                      return carry;
                    }, [])
                  };
                })
              };
            });
          })).then(function () {
            return depsHash;
          }).then(function (depsHash) {
            manifest.__configHash = _configHash;
            manifest.__depsHash = depsHash;
            compilation.assets['manifest.json'] = new RawSource(JSON.stringify(manifest));
          });
        }).then(function () {
          return cb();
        }).catch(cb);;
      });
    }
  }]);

  return ManifestPlugin;
}();

module.exports = ManifestPlugin;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _require = __webpack_require__(0),
    basename = _require.basename,
    join = _require.join;

var _require2 = __webpack_require__(3),
    readdir = _require2.readdir,
    readFile = _require2.readFile,
    stat = _require2.stat;

var pify = __webpack_require__(4);
var nodeObjectHash = __webpack_require__(25);

var hash = __webpack_require__(1);

var fileHash = function fileHash(file) {
  return pify(readFile)(file).then(hash);
};

var contextHash = function contextHash(dir) {
  var _contextHash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : contextHash;

  return pify(readdir)(dir).then(function (names) {
    return Promise.all(names.map(function (name) {
      var fullpath = join(dir, name);
      return pify(stat)(fullpath).then(function (stat) {
        if (stat.isDirectory()) {
          return _contextHash(fullpath);
        } else {
          return fileHash(fullpath);
        }
      });
    }));
  }).then(function (hashes) {
    return hashes.filter(Boolean);
  }).then(function (hashes) {
    return hashes.reduce(function (carry, value) {
      return hash(carry + value);
    });
  });
};

var depsContextHash = function depsContextHash(dir) {
  return contextHash(dir, function (dir) {
    return basename(dir).startsWith('.') ? null : pify(stat)(join(dir, 'package.json')).then(function () {
      return fileHash(join(dir, 'package.json'));
    }).catch(function () {
      return contextHash(dir, function (dir) {
        return hash(dir);
      });
    });
  });
};

var configHash = function configHash(config) {
  return nodeObjectHash({ sort: false }).hash(config);
};

module.exports = {
  configHash: configHash,
  contextHash: contextHash,
  depsContextHash: depsContextHash,
  fileHash: fileHash
};

/***/ }),
/* 25 */
/***/ (function(module, exports) {

module.exports = require("node-object-hash");

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _require = __webpack_require__(0),
    join = _require.join;

var jest = __webpack_require__(27);

var RunJestWhenDone = function () {
  function RunJestWhenDone() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, RunJestWhenDone);

    this.options = options;
  }

  _createClass(RunJestWhenDone, [{
    key: 'apply',
    value: function apply(compiler) {
      var _options = this.options,
          argv = _options.argv,
          jestArgv = _options.jestArgv;
      // let cliOnce = false;

      compiler.plugin('done', function () {
        var config = compiler.options;
        // if (watchMode && cliOnce) {
        //   return;
        // }
        // cliOnce = true;

        var wd = join(config.context, '.cache/jest-webpack');
        var oldWd = process.cwd();
        process.chdir(wd);

        var jestDone = function jestDone(result) {
          if (compiler._plugins['jest-webpack-done']) {
            try {
              process.chdir(oldWd);
            } finally {
              compiler.applyPlugins('jest-webpack-done', result);
            }
            return true;
          }
        };

        var run = function run() {
          return new Promise(function (resolve, reject) {
            var promise = jest.runCLI(jestArgv, [wd], function (e, result) {
              if (e) {
                return reject(e);
              }
              return resolve(result);
            });
            if (promise) {
              promise.then(resolve, reject);
            }
          });
        };

        try {
          run().then(function (result) {
            if (!jestDone(result.results)) {
              if (!result.results.success) {
                process.on('exit', function () {
                  return process.exit(1);
                });
              } else if (jestArgv.forceExit) {
                process.exit(result.results.success ? 0 : 1);
              }
            }
          }).catch(function (e) {
            console.error(e.stack || e);
            jestDone({ success: false });
            process.exit(1);
          });
        } catch (e) {
          console.error(e.stack || e);
          jestDone({ success: false });
          process.exit(1);
        }
      });
    }
  }]);

  return RunJestWhenDone;
}();

module.exports = RunJestWhenDone;

/***/ }),
/* 27 */
/***/ (function(module, exports) {

module.exports = require("jest");

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _require = __webpack_require__(0),
    basename = _require.basename,
    dirname = _require.dirname,
    join = _require.join,
    relative = _require.relative,
    sep = _require.sep;

var NodeTemplatePlugin = __webpack_require__(7);
var NodeTargetPlugin = __webpack_require__(6);
var LibraryTemplatePlugin = __webpack_require__(29);

var EntryReferenceModule = __webpack_require__(10);
var EntryReferenceDependency = __webpack_require__(13);
var EntryReferenceTransformDependency = __webpack_require__(5);

var SharedData = function () {
  function SharedData() {
    _classCallCheck(this, SharedData);

    this.compilation = null;
    this.manifest = null;
    this.fulfilledManifest = null;
    this.entries = {};
    this.modules = {};
    this.compilations = {};
    this.modulesRunning = 0;
    this.modulesCompleted = 0;
    this.entriesRunning = 0;
    this.entriesCompleted = 0;
    this.filesRunning = 0;
    this.filesCompleted = 0;
    this.fileCallbacks = {};
    this.fileErrors = {};
    this.entryCallbacks = {};
    this.entryErrors = {};
    this.entryCompleted = {};
    this.entryCompletedCallbacks = {};
    this.moduleErrors = {};
    this.onComplete = function () {};
  }

  _createClass(SharedData, [{
    key: 'reset',
    value: function reset(compilation, onComplete) {
      this.compilation = compilation;
      this.entries = {};
      this.modules = {};
      this.compilations = {};
      this.modulesRunning = 0;
      this.modulesCompleted = 0;
      this.entriesRunning = 0;
      this.entriesCompleted = 0;
      this.filesRunning = 0;
      this.filesCompleted = 0;
      this.fileCallbacks = {};
      this.fileErrors = {};
      this.entryCallbacks = {};
      this.entryErrors = {};
      this.entryCompleted = {};
      this.entryCompletedCallbacks = {};
      this.moduleErrors = {};
      this.onComplete = onComplete;
    }
  }, {
    key: 'setManifest',
    value: function setManifest(manifest) {
      this.manifest = manifest;
      this.fulfilledManifest = {};
    }
  }, {
    key: 'startFile',
    value: function startFile(resource) {
      this.filesRunning++;
    }
  }, {
    key: 'completeFile',
    value: function completeFile(resource, error) {
      this.filesCompleted++;

      if (this.filesCompleted == this.filesRunning && this.fulfilledManifest && this.manifest) {
        for (var key in this.fulfilledManifest) {
          var item = this.fulfilledManifest[key];
          var oldItem = this.manifest[key];
          if (item && oldItem && item.transforms.length < oldItem.transforms.length) {
            // console.log('smaller file', key, item.transforms.length, oldItem.transforms.length);
            this.manifest[key] = null;
            for (var index in item.transforms) {
              this.compileModule(item.transforms[index], key, function () {});
            }
          }
        }
      }
      if (this.filesCompleted == this.filesRunning) {
        // this.manifest &&
        //   console.log(
        //     Object.keys(this.manifest)
        //     .filter(key => this.manifest[key]),
        //     this.filesCompleted
        //   );
        this.onComplete();
      }
    }
  }, {
    key: 'startEntry',
    value: function startEntry(resource, callback) {
      this.entryCallbacks[resource] = callback;
      this.entriesRunning++;
    }
  }, {
    key: 'completeEntry',
    value: function completeEntry(resource, error) {
      this.entryErrors[resource] = error;
      this.entryCompleted[resource] = true;
      this.entriesCompleted++;

      if (this.entryCompletedCallbacks[resource]) {
        this.entryCompletedCallbacks[resource].forEach(function (cb) {
          return cb();
        });
      }

      this.checkCompletion();
    }
  }, {
    key: 'startModule',
    value: function startModule(request) {
      this.modulesRunning++;
    }
  }, {
    key: 'completeModule',
    value: function completeModule(request, error) {
      this.moduleErrors[request] = error;
      this.modulesCompleted++;

      this.checkCompletion();
    }
  }, {
    key: 'checkCompletion',
    value: function checkCompletion() {
      if (this.modulesRunning === this.modulesCompleted && this.entriesCompleted === this.entriesRunning) {
        for (var key in this.entryCallbacks) {
          this.entryCallbacks[key](this.entryErrors[key]);
        }
      }
    }
  }, {
    key: 'compileFile',
    value: function compileFile(resource, callback) {
      var _this2 = this;

      if (this.entryCompleted[resource]) {
        return callback();
      }

      if (!this.entryCompletedCallbacks[resource]) {
        this.entryCompletedCallbacks[resource] = [];
      }
      this.entryCompletedCallbacks[resource].push(callback);

      if (!this.compilations[resource]) {
        var shortResource = relative(this.compilation.compiler.options.context, resource);
        this.startFile(resource);

        this.entries[resource] = new EntryReferenceModule(resource);

        var _this = this;

        var child = this.compilation.compiler.createChildCompiler(this.compilation, shortResource);
        child.records = this.compilation.compiler.records[shortResource][0];
        [new NodeTemplatePlugin({
          asyncChunkLoading: false
        }), new NodeTargetPlugin(), new LibraryTemplatePlugin(this.compilation.compiler.options.output.library, this.compilation.compiler.options.output.libraryTarget, this.compilation.compiler.options.output.umdNamedDefine, this.compilation.compiler.options.output.auxiliaryComment || ""), {
          apply: function apply(compiler) {
            compiler.plugin('this-compilation', function (compilation) {
              compilation.plugin('optimize-assets', function (assets, cb) {
                Object.keys(assets).forEach(function (key) {
                  var newKey = join(dirname(shortResource), basename(key));
                  if (newKey === key) {
                    return;
                  }
                  assets[newKey] = assets[key];
                  delete assets[key];
                });
                cb();
              });
            });

            compiler.plugin('make', function (compilation, cb) {
              // Store compilation to add transforms to later.
              _this.compilations[resource] = compilation;

              // Use or create a cache for this compilation in the parent cache.
              if (compilation.cache) {
                if (!compilation.cache[shortResource]) {
                  compilation.cache[shortResource] = {};
                }
                compilation.cache = compilation.cache[shortResource];
              }

              _this.startEntry(resource, cb);
              return compilation.addEntry(
              // context
              dirname(resource),
              // dependency
              new EntryReferenceDependency(resource),
              // compilation name
              shortResource, function (err, module) {
                // The callback will be called when all modules have been
                // built.
                _this.completeEntry(resource, err);
              });
            });
          }
        }].forEach(function (plugin) {
          return plugin.apply(child);
        });
        child.runAsChild(function (err) {
          _this2.completeFile(resource, err);
        });
      }
    }
  }, {
    key: 'compileModule',
    value: function compileModule(request, resource, callback) {
      var _this3 = this;

      var isEntry = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

      if (!isEntry && this.manifest && this.manifest[resource] && (this.manifest[resource].transforms.findIndex(function (transform) {
        return transform.request === request;
      }) !== -1 || this.manifest[resource].transforms.findIndex(function (transform) {
        return transform.rawRequest === '!!' + request;
      }) !== -1) || isEntry && this.manifest && this.manifest[resource] && this.manifest[resource].transforms.find(function (transform) {
        return transform.isEntry;
      })) {
        this.fulfilledManifest[resource] = this.fulfilledManifest[resource] || {
          transforms: []
        };
        if (isEntry) {
          request = this.manifest[resource].transforms.find(function (transform) {
            return transform.isEntry;
          }).request;
        } else {
          request = (this.manifest[resource].transforms.find(function (transform) {
            return transform.request === request;
          }) || this.manifest[resource].transforms.find(function (transform) {
            return transform.rawRequest === '!!' + request;
          })).request;
        }
        if (this.fulfilledManifest[resource].transforms.findIndex(function (transform) {
          return transform.request === request;
        }) === -1) {
          // console.log('stand deps',
          //   this.manifest[resource].transforms
          //   .findIndex(transform => transform.request === request),
          //   resource, request);

          this.fulfilledManifest[resource].transforms.push(request);
          this.manifest[resource].transforms.find(function (transform) {
            return transform.request === request;
          }).dependencies.forEach(function (dep) {
            var depSplit = dep.split('!');
            var resource = depSplit[depSplit.length - 1];
            _this3.compileModule(dep, resource.split('?')[0], function () {}, resource.split('?')[1] === '__jest_webpack_isEntry');
          });
        }
        return callback(null, {
          request: request
        });
      }
      if (this.manifest && this.manifest[resource]) {
        // console.log(this.manifest[resource].transforms);
        this.manifest[resource] = null;
      }

      // console.log('not cached', resource, request);

      this.compileFile(resource, function () {
        if (!_this3.modules[request]) {
          _this3.startModule(request);

          var dep = new EntryReferenceTransformDependency((isEntry ? '' : '!!') + request);

          _this3.compilations[resource]._addModuleChain(dirname(resource), dep, function (module) {
            dep.module = module;
            dep.request = module.request;
            // if (isEntry) {
            //   dep.request = module.request;
            // }
            // else {
            //   module.request = request;
            // }
            // console.log(dep.request, module.request);
            _this3.entries[resource].addData(dep);
            if (isEntry) {
              _this3.entries[resource].isEntry = true;
              _this3.entries[resource].entryRequest = module.request;
            }
          }, function (err, module) {
            _this3.completeModule(request, err);
          });

          callback(null, dep);
        } else {
          var _dep = _this3.entries[resource].dependencies.find(function (dep) {
            return dep.request === request;
          });
          callback(null, _dep);
        }
      }, isEntry);
    }

    // compileDependency(dep) {
    //
    // }

  }]);

  return SharedData;
}();

module.exports = SharedData;

/***/ }),
/* 29 */
/***/ (function(module, exports) {

module.exports = require("webpack/lib/LibraryTemplatePlugin");

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _require = __webpack_require__(3),
    readFileSync = _require.readFileSync;

var _require2 = __webpack_require__(0),
    resolve = _require2.resolve,
    sep = _require2.sep;

var mkdirp = __webpack_require__(31);

var SingleEntryDependency = __webpack_require__(8);
var SingleEntryPlugin = __webpack_require__(32);

var NodeTargetPlugin = __webpack_require__(6);
var NodeTemplatePlugin = __webpack_require__(7);

// Try and require jest's handling for finding source files so we can get the
// test files jest will test once the webpack step is complete.
var tryRequire = __webpack_require__(14);
var SearchSource = tryRequire(function () {
  return __webpack_require__(33);
}, function () {
  return __webpack_require__(34);
}, function () {
  return __webpack_require__(35);
}, function () {
  return __webpack_require__(36);
});
var createContext = tryRequire(function () {
  return __webpack_require__(37);
}, function () {
  return __webpack_require__(38);
}, function () {
  return __webpack_require__(39);
}, function () {
  return __webpack_require__(40);
});
var Runtime = tryRequire(function () {
  return __webpack_require__(41);
}, function () {
  return __webpack_require__(42);
}, function () {
  return __webpack_require__(43);
});
// const getTestPathPattern = tryRequire(
//   () => require('jest/node_modules/jest-cli/build/lib/getTestPathPattern'),
//   () => require('jest-cli/build/lib/getTestPathPattern')
// );

var modulePathIgnorePatterns = function modulePathIgnorePatterns(options) {
  if (options.jestConfig.config) {
    return options.jestConfig.config.modulePathIgnorePatterns;
  } else {
    return options.jestConfig.projectConfig.modulePathIgnorePatterns;
  }
};

var testPathIgnorePatterns = function testPathIgnorePatterns(options) {
  if (options.jestConfig.config) {
    return options.jestConfig.config.testPathIgnorePatterns;
  } else {
    return options.jestConfig.projectConfig.testPathIgnorePatterns;
  }
};

var testPathPattern = function testPathPattern(options) {
  if (options.jestConfig.config) {
    var getTestPathPattern = tryRequire(function () {
      return __webpack_require__(44);
    }, function () {
      return __webpack_require__(45);
    });
    return getTestPathPattern(options.jestArgv);
  } else {
    return options.jestConfig.globalConfig.testPathPattern;
  }
};

var TestEntriesPlugin = function () {
  function TestEntriesPlugin(options) {
    _classCallCheck(this, TestEntriesPlugin);

    this.options = options;
  }

  _createClass(TestEntriesPlugin, [{
    key: 'apply',
    value: function apply(compiler) {
      var options = this.options || {};

      compiler.plugin("compilation", function (compilation, params) {
        var normalModuleFactory = params.normalModuleFactory;

        compilation.dependencyFactories.set(SingleEntryDependency, normalModuleFactory);
      });

      compiler.plugin('make', function (compilation, cb) {
        var jestArgv = options.jestArgv,
            jestConfig = options.jestConfig;


        var ignoreCacheJestWebpack = '/.cache/jest-webpack/'.replace(/\//g, sep === '\\' ? '\\\\' : sep);

        var configIgnoreJestWebpack = Object.assign({}, jestConfig.projectConfig || jestConfig.config, {
          modulePathIgnorePatterns: (modulePathIgnorePatterns(options) || []).concat([ignoreCacheJestWebpack]),
          testPathIgnorePatterns: (testPathIgnorePatterns(options) || []).concat([ignoreCacheJestWebpack])
        });

        try {
          mkdirp.sync(configIgnoreJestWebpack.cacheDirectory);
        } catch (_) {}

        Runtime.createHasteMap(configIgnoreJestWebpack).build().then(function (hasteMap) {
          return createContext(configIgnoreJestWebpack, hasteMap);
        }).then(function (jestContext) {
          var searchSource = new SearchSource(jestContext);
          return searchSource.findMatchingTests(testPathPattern(options)).tests.map(function (test) {
            return test.path;
          });
        }).then(function (tests) {
          options.data.reset(compilation, function () {
            cb();
          });

          tests.map(function (name) {
            var entry = resolve(compiler.options.context, name);
            options.data.compileModule(entry, entry, function () {}, true);
          });

          if (options.data.filesRunning === 0) {
            cb();
          }
        }).catch(cb);
      });
    }
  }]);

  return TestEntriesPlugin;
}();

module.exports = TestEntriesPlugin;

/***/ }),
/* 31 */
/***/ (function(module, exports) {

module.exports = require("mkdirp");

/***/ }),
/* 32 */
/***/ (function(module, exports) {

module.exports = require("webpack/lib/SingleEntryPlugin");

/***/ }),
/* 33 */
/***/ (function(module, exports) {

module.exports = require("jest/node_modules/jest-cli/build/search_source");

/***/ }),
/* 34 */
/***/ (function(module, exports) {

module.exports = require("jest/node_modules/jest-cli/build/SearchSource");

/***/ }),
/* 35 */
/***/ (function(module, exports) {

module.exports = require("jest-cli/build/search_source");

/***/ }),
/* 36 */
/***/ (function(module, exports) {

module.exports = require("jest-cli/build/SearchSource");

/***/ }),
/* 37 */
/***/ (function(module, exports) {

module.exports = require("jest/node_modules/jest-cli/build/lib/create_context");

/***/ }),
/* 38 */
/***/ (function(module, exports) {

module.exports = require("jest/node_modules/jest-cli/build/lib/createContext");

/***/ }),
/* 39 */
/***/ (function(module, exports) {

module.exports = require("jest-cli/build/lib/create_context");

/***/ }),
/* 40 */
/***/ (function(module, exports) {

module.exports = require("jest-cli/build/lib/createContext");

/***/ }),
/* 41 */
/***/ (function(module, exports) {

module.exports = require("jest/node_modules/jest-cli/node_modules/jest-runtime");

/***/ }),
/* 42 */
/***/ (function(module, exports) {

module.exports = require("jest-cli/node_modules/jest-runtime");

/***/ }),
/* 43 */
/***/ (function(module, exports) {

module.exports = require("jest-runtime");

/***/ }),
/* 44 */
/***/ (function(module, exports) {

module.exports = require("jest/node_modules/jest-cli/build/lib/getTestPathPattern");

/***/ }),
/* 45 */
/***/ (function(module, exports) {

module.exports = require("jest-cli/build/lib/getTestPathPattern");

/***/ }),
/* 46 */
/***/ (function(module, exports) {

module.exports = require("jest/node_modules/jest-cli/node_modules/jest-config");

/***/ }),
/* 47 */
/***/ (function(module, exports) {

module.exports = require("jest-cli/node_modules/jest-config");

/***/ }),
/* 48 */
/***/ (function(module, exports) {

module.exports = require("jest-config");

/***/ }),
/* 49 */
/***/ (function(module, exports) {

module.exports = require("jest/node_modules/jest-cli/node_modules/yargs");

/***/ }),
/* 50 */
/***/ (function(module, exports) {

module.exports = require("jest-cli/node_modules/yargs");

/***/ }),
/* 51 */
/***/ (function(module, exports) {

module.exports = require("yargs");

/***/ }),
/* 52 */
/***/ (function(module, exports) {

module.exports = require("jest/node_modules/jest-cli/build/cli/args");

/***/ }),
/* 53 */
/***/ (function(module, exports) {

module.exports = require("jest-cli/build/cli/args");

/***/ })
/******/ ]);
//# sourceMappingURL=jest-webpack.js.map